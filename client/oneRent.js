// Generated by CoffeeScript 1.9.3
(function() {
  var App, Arrows, ListingCell, ListingHeading, ListingRow, ListingsTable;

  App = React.createClass({
    getInitialState: function() {
      return {
        headings: ['_id', 'type', 'title', 'price', 'region', 'location', 'hasPic', 'date', 'id'],
        listings: [],
        page: 0,
        field: '_id',
        order: 1
      };
    },
    getListings: function(page, field, order) {
      var tableData;
      tableData = {
        page: page,
        pageSize: 15,
        field: field,
        order: order
      };
      return $.get('listings.json', tableData, (function(listings) {
        this.setState({
          listings: listings,
          page: page,
          field: field,
          order: order
        });
      }).bind(this));
    },
    componentDidMount: function() {
      return this.getListings(this.state.page, this.state.field, this.state.order);
    },
    onPageEvent: function(direction) {
      var newPage;
      if (direction === 'Next') {
        newPage = this.state.page + 1;
      } else if (direction === 'Previous' && this.state.page > 0) {
        newPage = this.state.page - 1;
      } else {
        return;
      }
      this.getListings(newPage, this.state.field, this.state.order);
    },
    onSortEvent: function(selectedField) {
      var field, order;
      if (selectedField !== this.state.field) {
        order = this.state.order;
        field = selectedField;
      } else {
        order = this.state.order * -1;
        field = this.state.field;
      }
      this.getListings(this.state.page, field, order);
    },
    render: function() {
      return React.createElement("div", {
        "className": 'app'
      }, React.createElement("h1", null, "OneRent Listings"), React.createElement(ListingsTable, {
        "listings": this.state.listings,
        "headings": this.state.headings,
        "onSortEvent": this.onSortEvent
      }), React.createElement(Arrows, {
        "onPageEvent": this.onPageEvent,
        "page": this.state.page
      }));
    }
  });

  ListingsTable = React.createClass({
    render: function() {
      var tableHeadings, tableRows;
      tableHeadings = this.props.headings.map((function(heading) {
        return React.createElement(ListingHeading, {
          "onSortEvent": this.props.onSortEvent
        }, heading);
      }).bind(this));
      tableRows = this.props.listings.map((function(listing) {
        return React.createElement(ListingRow, {
          "headings": this.props.headings
        }, listing);
      }).bind(this));
      return React.createElement("table", {
        "id": 'listings',
        "className": "tablesorter"
      }, React.createElement("thead", null, React.createElement("tr", null, tableHeadings)), React.createElement("tbody", null, tableRows));
    }
  });

  ListingHeading = React.createClass({
    handleSortRequest: function(e) {
      return this.props.onSortEvent(e.target.innerText);
    },
    render: function() {
      return React.createElement("th", {
        "onClick": this.handleSortRequest
      }, this.props.children);
    }
  });

  ListingRow = React.createClass({
    render: function() {
      var tableCells;
      tableCells = this.props.headings.map((function(heading) {
        return React.createElement(ListingCell, null, this.props.children[heading]);
      }).bind(this));
      return React.createElement("tr", null, tableCells);
    }
  });

  ListingCell = React.createClass({
    render: function() {
      return React.createElement("td", null, this.props.children);
    }
  });

  Arrows = React.createClass({
    handlePageRequest: function(e) {
      return this.props.onPageEvent(e.target.value);
    },
    render: function() {
      return React.createElement("div", {
        "className": 'buttons'
      }, React.createElement("input", {
        "type": 'button',
        "value": 'Previous',
        "onClick": this.handlePageRequest
      }), React.createElement("input", {
        "type": 'button',
        "value": 'Next',
        "onClick": this.handlePageRequest
      }), this.props.page + 1);
    }
  });

  React.render(React.createElement(App, null), document.getElementById('Container'));

}).call(this);
