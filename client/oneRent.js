// Generated by CoffeeScript 1.9.3
(function() {
  var App, Arrows, Listings;

  App = React.createClass({
    getInitialState: function() {
      return {
        data: []
      };
    },
    componentDidMount: function() {
      return $.get('listings.json', (function(data) {
        this.setState({
          data: data
        });
      }).bind(this));
    },
    handleClick: function(direction) {
      return console.log(direction);
    },
    render: function() {
      return React.createElement("div", {
        "className": 'app'
      }, React.createElement("h1", null, "OneRent Listings"), React.createElement(Listings, {
        "data": this.state.data
      }), React.createElement(Arrows, {
        "onClickEvent": this.handleClick
      }));
    }
  });

  Listings = React.createClass({
    render: function() {
      var heading, headings, i, j, k, len, len1, len2, listing, ref;
      headings = ['_id', 'type', 'title', 'price', 'region', 'location', 'hasPic', 'date', 'id'];
      for (i = 0, len = headings.length; i < len; i++) {
        heading = headings[i];
        $('#listings thead tr').append('<th>' + heading + '</th>');
      }
      ref = this.props.data;
      for (j = 0, len1 = ref.length; j < len1; j++) {
        listing = ref[j];
        $('#listings tbody').append('<tr></tr>');
        for (k = 0, len2 = headings.length; k < len2; k++) {
          heading = headings[k];
          $('#listings tbody tr:last-child').append('<td>' + listing[heading] + '</td>');
        }
      }
      $("#listings").tablesorter({
        widgets: ['zebra']
      });
      return React.createElement("table", {
        "id": 'listings',
        "className": "tablesorter"
      }, React.createElement("thead", null, React.createElement("tr", null)), React.createElement("tbody", null));
    }
  });

  Arrows = React.createClass({
    handleClick: function(e) {
      return this.props.onClickEvent(e.target.value);
    },
    render: function() {
      return React.createElement("div", {
        "className": 'buttons'
      }, React.createElement("input", {
        "type": 'button',
        "value": 'Left',
        "onClick": this.handleClick
      }), React.createElement("input", {
        "type": 'button',
        "value": 'Right',
        "onClick": this.handleClick
      }));
    }
  });

  React.render(React.createElement(App, null), document.getElementById('Container'));

}).call(this);
